generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admins {
  id       Int     @id @default(autoincrement())
  fullName String?
  email    String  @unique
  password String
}

model Categories {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  dishes      Dishes[]
}

model Dishes {
  id              Int               @id @default(autoincrement())
  name            String
  description     String
  ingredients     Json?
  price           Float
  categoryId      Int
  imageUrls       String[]
  createAt        DateTime          @default(now())
  updateAt        DateTime          @updatedAt
  category        Categories        @relation(fields: [categoryId], references: [id])
  ReservationDish ReservationDish[]
}

model Clients {
  id           Int           @id @default(autoincrement())
  fullName     String
  phone        String        @unique
  email        String?       @unique
  reservations Reservation[]
}

model Tables {
  id           Int           @id @default(autoincrement())
  number       String        @unique
  capacity     Int
  location     String?
  isAvailable  Boolean       @default(true)
  Reservations Reservation[]
}

model Reservation {
  id                Int               @id @default(autoincrement())
  date              DateTime
  guestsCount       Int
  status            Status            @default(PENDING)
  clientId          Int
  tableId           Int
  notes             String?
  createAt          DateTime          @default(now())
  updateAt          DateTime          @updatedAt
  client            Clients           @relation(fields: [clientId], references: [id])
  table             Tables            @relation(fields: [tableId], references: [id])
  reservationDishes ReservationDish[]

  @@index([date, tableId])
}

model ReservationDish {
  id             Int         @id @default(autoincrement())
  reservationId  Int
  dishId         Int
  quantity       Int         @default(1)
  specialRequest String?
  dish           Dishes      @relation(fields: [dishId], references: [id])
  reservation    Reservation @relation(fields: [reservationId], references: [id])

  @@index([reservationId])
  @@index([dishId])
}

enum Status {
  PENDING
  CONFIRMED
  REJECTED
}
